<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		"
	default-lazy-init="true">

	<!-- 事务管理器, Jdbc单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- local development环境 -->
	<beans profile="production,development,beta,test">
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 数据库基本信息配置 -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!-- 初始化连接数量 -->
			<property name="initialSize" value="${druid.initialSize}" />
			<!-- 最大并发连接数 -->
			<property name="maxActive" value="${druid.maxActive}" />
			<!-- 最小空闲连接数 -->
			<property name="minIdle" value="${druid.minIdle}" />
			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="${druid.maxWait}" />
			<!-- 超过时间限制是否回收 -->
			<property name="removeAbandoned" value="${druid.removeAbandoned}" />
			<!-- 超过时间限制多长； -->
			<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
			<!-- 用来检测连接是否有效的sql，要求是一个查询语句 -->
			<property name="validationQuery" value="${druid.validationQuery}" />
			<!-- 申请连接的时候检测 -->
			<property name="testWhileIdle" value="${druid.testWhileIdle}" />
			<!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
			<property name="testOnBorrow" value="${druid.testOnBorrow}" />
			<!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
			<property name="testOnReturn" value="${druid.testOnReturn}" />
			<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
			<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
			<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
			<!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall -->
			<property name="filters" value="${druid.filters}" />
		</bean>
	</beans>

	<!-- unit test环境 -->
	<beans profile="ut">
		<!-- Spring Simple连接池 -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>
		<!-- 初始化数据表结构 与默认数据 -->
		<!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL"> 
			<jdbc:script location="classpath:sql/${jdbc.type}/schema.sql" /> <jdbc:script 
			location="classpath:data/${jdbc.type}/import-data.sql" encoding="UTF-8"/> 
			</jdbc:initialize-database> -->
	</beans>


</beans>